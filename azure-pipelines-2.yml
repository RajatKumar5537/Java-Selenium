trigger:
- master

pool:
  vmImage: 'windows-latest'

stages:
- stage: SetupEnvironment
  jobs:
  - job: SetupChromeDriver
    timeoutInMinutes: 10
    cancelTimeoutInMinutes: 5
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Download and install the latest ChromeDriver
          Invoke-WebRequest -Uri 'https://chromedriver.storage.googleapis.com/LATEST_RELEASE' -OutFile 'chromedriver_version.txt'
          $chromeDriverVersion = Get-Content 'chromedriver_version.txt'
          $chromeDriverUrl = "https://chromedriver.storage.googleapis.com/$chromeDriverVersion/chromedriver_win64.zip"
          Invoke-WebRequest -Uri $chromeDriverUrl -OutFile 'chromedriver.zip'
          Expand-Archive -Path 'chromedriver.zip' -DestinationPath '$(Agent.ToolsDirectory)\chromedriver'
          Remove-Item 'chromedriver.zip'
      displayName: 'Install ChromeDriver'

- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build'
    timeoutInMinutes: 180 # Set timeout to 3 hours
    cancelTimeoutInMinutes: 120  # Set cancel timeout to 2 hours
    steps:
    - checkout: self
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'test'
        options: 'test -Dsurefire.suiteXmlFiles=testng.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: CopyFiles@2 
      displayName: 'Copy ExtentReport Files'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: '**/ExtentReport/**'
        TargetFolder: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()

    - task: CopyFiles@2 
      displayName: 'Copy Screenshots to: $(build.artifactstagingdirectory)/ScreenShot'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)/ScreenShot'
        Contents: '**/*.png'  # Adjust the file pattern based on your screenshot naming convention
        TargetFolder: '$(build.artifactstagingdirectory)/ScreenShot'
      condition: succeededOrFailed()

    - task: ArchiveFiles@2
      displayName: 'Archive ExtentReport and ScreenShot'
      inputs:
        rootFolderOrFile: '$(build.artifactstagingdirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MyArtifacts.zip'
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: MyArtifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      condition: succeededOrFailed()
