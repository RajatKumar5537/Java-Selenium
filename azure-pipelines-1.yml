trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: CheckoutCode
    jobs:
    - job: 'Checkoutgitcode'
      steps:
        - checkout: self

  - stage: InstallChromeAndChromeDriver
    jobs:
    - job: InstallDependencies
      steps:
        - script: |
            # Download and install Chrome
            curl -o chrome_installer.exe https://dl.google.com/chrome/install/375.126/chrome_installer.exe
            Start-Process -Wait -FilePath .\chrome_installer.exe -ArgumentList "/silent /install"
            Remove-Item -Path .\chrome_installer.exe

            # Download and install ChromeDriver
            Invoke-WebRequest -Uri 'https://chromedriver.storage.googleapis.com/94.0.4606.61/chromedriver_win32.zip' -OutFile chromedriver.zip
            Expand-Archive -Path .\chromedriver.zip -DestinationPath C:\chromedriver\
            [System.Environment]::SetEnvironmentVariable('Path', $env:Path + ';C:\chromedriver', [System.EnvironmentVariableTarget]::Machine)
          displayName: 'Install Chrome and ChromeDriver'

  - stage: BuildAndTest
    jobs:
    - job: Build
      steps:
        - task: Maven@4
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'clean install'

    - job: UnitTests
      steps:
        - script: |
            # Set the execution environment to "azure" as an environment variable
            echo "EXECUTION_ENVIRONMENT=azure" >> $(Agent.BuildDirectory)/.env
            source $(Agent.BuildDirectory)/.env

            # Run your tests (replace with actual test execution command)
            mvn test
          displayName: 'Run Unit Tests'

    - job: CodeAnalysis
      steps:
        - script: |
            # Add commands for code analysis (e.g., SonarQube)
          displayName: 'Code Analysis'

  - stage: Deploy
    jobs:
    - job: DeployToStaging
      steps:
        - script: |
            # Add commands to deploy to your staging environment
          displayName: 'Deploy to Staging'

  - stage: PublishArtifacts
    jobs:
    - job: Publish
      steps:
        - task: PublishBuildArtifacts@1
          inputs:
            pathtoPublish: '$(System.DefaultWorkingDirectory)'
            artifactName: 'MyJavaArtifacts'
